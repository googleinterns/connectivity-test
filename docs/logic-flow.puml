@startuml
skinparam defaultFontName Linux Libertine O
skinparam defaultFontSize 20

start

:==Initialization
* generation rules **GR**
* generators **G**;

:==Input
* the current network model **M**
* a list of starting routes **R** for derivation.
  (each route might be currently in **M** or not)
;

repeat
:Get next starting route **r** from **R**;

if (Find a rule **gr** in **GR** that matchs **r**) then (Found **gr**)
  :Get destinations to install new routes,
  stored in "Context" tuples:
  <network, region, peer_info>;

  repeat
  :For each destination context **c**;

  :Generate a new route **r'**,
  copying from route **r**;

  :Apply generator functions to **r'**:
  * common generator
      (for id, name, and network)
  * destination-specific generator
      (indexed by destination name)
  * rule-name-destination generator
      (indexed by name of **gr** and
      destination name)
  ;

  if (Find an existing route matches **r'**) then (found as **r''** )
    :Collect **r''**;
    :Append **r''** to **R**;
  else (Not found)
    :Install **r'**;
    :Collect **r'**;
    :Append **r'** to **R**;
  endif

  repeat while (More destionations?)

else (Not found)
  :Continue;
endif
repeat while (More starting routes in **R**?)

:Return all collected routes;
    note
    Each collected route is derived from
    one of the starting routes, and is either
    1. an existing route in **M**, or
    2. a new route currently not in **M**
    =======
    **Use case 1**: finding existing derived
    routes of a route in **M**. All returned
    routes are type 1.

    **Use case 2**: before inserting a route,
    find out what routes will be derived
    from this one. All returned routes are
    type 2.

    **Use case 3**: some derived routes are
    just randomly missing. Complete the
    partial model **M**. The returned routes
    may include both types.
    end note

stop
@enduml